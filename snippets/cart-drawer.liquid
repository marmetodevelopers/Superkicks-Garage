{% comment %}
    Renders cart drawer

    Usage:
    {% render 'cart-drawer' %}
{% endcomment %}

{% for item in cart.items %}
 {% if item.product.template_suffix == "fcfs-product-page" %} 
      {% assign productId = item.product.id %}
      {% assign variantId = item.variant.id %}
      {% assign lineItemProperty = item.properties['dataToken']  %}
      {% assign fcfsTag = true %}
  {% endif %}
{% endfor %}

{% assign tokenLine = lineItemProperty %}
{% assign parts = tokenLine | split: "=" %}
{% assign date = parts.last | slice: -8, 8  %}

{% assign lastSixNumbers = parts.last | remove: date  | slice: -6, 6  %}
{% assign ipAddress = parts.last | remove: date | remove: lastSixNumbers | replace: '*', '.' %}

{% assign current_date = "now" | date: "%Y%m%d" %}
{% capture combined_value %}{{ ipAddress }},{{ variantId }},{{ productId }},{{ date }},{{ lastSixNumbers }}{% endcapture %}
{% capture secretKeyValue %}{{ combined_value | hmac_sha256: "RepaRo" }}{% endcapture %}

<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<style>
  .offer-message-cart {
    text-align:center;
    background: {{settings.offer_background}};
    margin-bottom: 10px;
    font-weight: 600;
  }
  .offer-message-cart link-text {
    text-decoration: none;
    color:{{ settings.before_offer_url_color }};
    font-size:70%;
  }
  .offer-message-cart before-text{
    color:{{ settings.before_offer_color }};
  }
  .offer-message-cart after-text{
    color:{{ settings.after_offer_color }};
  }
  .drawer {
    visibility: hidden;
  }
  .fcfs_timer-background{
     background: #000000;
  }
  
  .fcfs-timer-cart{
    text-align: center;
    font-weight: 900;
    color: #fff;
    width:87%;
    display: flex;
    justify-conent: center;
    margin: 0 auto;
    justify-content: center;
    height: 40px;
    align-items: center;
    border-radius: 8px;
}
  .timer_left-text{
    margin-right:35px;
    font-size:15px;
  }
  .mins{
    margin-right: 8px;
    color: white;
    font-size: 15px;
    letter-spacing:2px;
  }
  .secs{
    color: white;
    font-size: 15px;
    letter-spacing:2px;
  }
  .cart_timer{
    margin-bottom:20px;
  }
  }
</style>
    
<cart-drawer class="drawer {% if cart == empty %} is-empty{% endif %}">
  <div id="CartDrawer" class="cart-drawer">
    <div id="CartDrawer-Overlay"class="cart-drawer__overlay"></div>
    <div class="drawer__inner" role="dialog" aria-modal="true" aria-label="{{ 'sections.cart.title' | t }}" tabindex="-1">
    {% if fcfsTag == blank or secretKeyValue == parts.first %}
      <div class="drawer__header">
        <h2 class="drawer__heading">{{ 'sections.cart.title' | t }}</h2>
        <button class="drawer__close" type="button" onclick="this.closest('cart-drawer').close()" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close-dark' %}</button>
      </div>
      {%- if cart == empty -%}
        <div class="drawer__inner-empty">
          <div class="cart-drawer__warnings center{% if settings.cart_drawer_collection != blank %} cart-drawer__warnings--has-collection{% endif %}">
            <div class="cart-drawer__empty-content">
              <h2 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h2>
              <button class="drawer__close-empty" type="button" onclick="this.closest('cart-drawer').close()" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
              <a href="{{ routes.all_products_collection_url }}" class="button">
                {{ 'general.continue_shopping' | t }}
              </a>
  
              {%- if shop.customer_accounts_enabled and customer == nil -%}
                <p class="cart__login-title h3">{{ 'sections.cart.login.title' | t }}</p>
                <p class="cart__login-paragraph">
                  {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
                </p>
              {%- endif -%}
            </div>
          </div>
          {%- if settings.cart_drawer_collection != blank -%}
            <div class="cart-drawer__collection">
              {% render 'card-collection',
                card_collection: settings.cart_drawer_collection,
                columns: 1
              %}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}
      
      {% assign tag_found = false %}
      {% assign count = 0 %}

      <cart-drawer-items {% if cart == empty %}class=" is-empty"{% endif %}>
        <form action="{{ routes.cart_url }}" id="CartDrawer-Form" class="cart__contents cart-drawer__form" method="post">
          <div id="CartDrawer-CartItems" class="drawer__contents js-contents">
            {%- if cart != empty -%}
              <div class="drawer__cart-items-wrapper">
              {%- for item in cart.items -%}
                  {%  for properties in item.properties %}
                    {% if properties contains "fcfs-added" %}
                      <mm-timer>
                        <div class="cart_timer">
                        <div class="fcfs-timer-cart">
                          <p class="timer_left-text">Your Time Left</p>
                          <p class="mins">  </p>
                          <p class="secs">  </p>
                        </div>
                        </div>
                      </mm-timer>
                    {% endif %}
                  {% endfor %}   
                 <div class="cart-items" >     
                      {% if item.image %}
                      <div class="cart-image_wrapper">
                        {% comment %} Leave empty space due to a:empty CSS display: none rule {% endcomment %}
                        <a href="{{ item.url }}" class="cart-item__link" tabindex="-1" aria-hidden="true"> </a>
                        <img class="cart-item__image"
                          src="{{ item.image | image_url: width: 300 }}"
                          alt="{{ item.image.alt | escape }}"
                          loading="lazy"
                          width="150"
                          height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}"
                        >
                      </div>
                      {% endif %}

                      <div class="cart-item_information">
                      <div class="cart-item_container">
                        {%- if settings.show_vendor -%}
                          <p class="cart-item_vendor light">{{ item.product.vendor }}</p>
                        {%- endif -%} 
                        <cart-remove-button id="CartDrawer-Remove-{{ item.index | plus: 1 }}" data-index="{{ item.index | plus: 1 }}" class="cart-drawer_remove">
                          <button type="button" class="button button--tertiary" aria-label="{{ 'sections.cart.remove_title' | t: title: item.title }}" {% if item.product.template_suffix == "fcfs-product-page" %} data-fcfs="true" data-token={{ lineItemProperty }} {% endif %}>
                            {% render 'icon-close' %}
                          </button>
                        </cart-remove-button>
                      </div>
                      <a href="{{ item.url }}" class="cart-item__name h4 break">{{ item.product.title | escape }}</a>

                      {%- if item.product.has_only_default_variant == false or item.properties.size != 0 or item.selling_plan_allocation != nil -%}
                        <div>
                          {%- if item.product.has_only_default_variant == false -%}
                            {%- for option in item.options_with_values -%}
                              <div class="product-option">
                                <span>{{ option.name }}:{{ option.value }} </span>
                              </div>
                            {%- endfor -%}
                          {%- endif -%}

                         {% comment %} {%- for property in item.properties -%}
                            {%- assign property_first_char = property.first | slice: 0 -%}
                            {%- if property.last != blank and property_first_char != '_' -%}
                              <div class="product-option">
                                <div>{{ property.first }}: </dt>
                                <div>
                                  {%- if property.last contains '/uploads/' -%}
                                    <a href="{{ property.last }}" class="link" target="_blank" aria-describedby="a11y-new-window-message">
                                      {{ property.last | split: '/' | last }}
                                    </a>
                                  {%- else -%}
                                    {{ property.last }}
                                  {%- endif -%}
                                </div>
                              </div>
                            {%- endif -%}
                          {%- endfor -%}{% endcomment %}
                        </div>

                        <p class="product-option">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                      {%- endif -%}

                      <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                        {%- for discount in item.discounts -%}
                          <li class="discounts__discount">
                            {%- render 'icon-discount' -%}
                            {{ discount.title }}
                          </li>
                        {%- endfor -%}
                      </ul>
                   

                  <div class="price_and_qunatity-wrapper">
                      <div class="loading-overlay hidden">
                        <div class="loading-overlay__spinner">
                          <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </div>
                      </div>

                      <div class="cart-item__price-wrapper">
                        {%- if item.original_line_price != item.final_line_price -%}
                          <div class="cart-item__discounted-prices">
                            <span class="visually-hidden">
                              {{ 'products.product.price.regular_price' | t }}
                            </span>
                            <s class="cart-item__old-price price price--end">
                              {{ item.original_line_price | money_without_trailing_zeros }}
                            </s>
                            <span class="visually-hidden">
                              {{ 'products.product.price.sale_price' | t }}
                            </span>
                            <span class="price price--end">
                              {{ item.final_line_price | money_without_trailing_zeros }}
                            </span>
                          </div>
                        {%- else -%}
                          <span class="price price--end">
                            {{ item.original_line_price | money_without_trailing_zeros }}
                          </span>
                        {%- endif -%}
                        
                        {%- if item.variant.available and item.unit_price_measurement -%}
                          <div class="unit-price caption">
                            <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                            {{ item.variant.unit_price | money_without_trailing_zeros }}
                            <span aria-hidden="true">/</span>
                            <span class="visually-hidden">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
                            {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                              {{- item.variant.unit_price_measurement.reference_value -}}
                            {%- endif -%}
                            {{ item.variant.unit_price_measurement.reference_unit }}
                          </div>
                        {%- endif -%}
                      </div>

                      {% if item.product.template_suffix != "fcfs-product-page" %}
                        <div class="cart-item__quantity-wrapper">
                          <quantity-input class="quantity">
                            <button class="quantity__button no-js-hidden" name="minus" type="button">
                              <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: item.product.title | escape }}</span>
                              {% render 'icon-minus' %}
                            </button>
                            <input class="quantity__input"
                              type="number"
                              name="updates[]"
                              value="{{ item.quantity }}"
                              min="0"
                              aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                              id="Drawer-quantity-{{ item.index | plus: 1 }}"
                              data-index="{{ item.index | plus: 1 }}"
                            >
                            <button class="quantity__button no-js-hidden" name="plus" type="button">
                              <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: item.product.title | escape }}</span>
                              {% render 'icon-plus' %}
                            </button>
                          </quantity-input>
                        </div>
                      {% endif %}
                      </div>
                     
                      <div id="CartDrawer-LineItemError-{{ item.index | plus: 1 }}" class="cart-item__error" role="alert">
                        <small class="cart-item__error-text"></small>
                        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-error" viewBox="0 0 13 13">
                          <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
                          <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
                          <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
                          <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
                        </svg>
                      </div>
                   </div>
                </div>
                  {% unless forloop.last %}
                    <hr class="cart-drawer_hr">
                  {% endunless %}

                  {% for tag in item.product.tags %}
                    {% if tag contains settings.custom_tag %}
                      {% assign tag_found = true %}
                      {% assign count = count | plus: item.quantity %}
                    {% endif %}
                  {% endfor %}                
                 {%- endfor -%}
              
              </div>     
            {%- endif -%}
            <p id="CartDrawer-LiveRegionText" class="visually-hidden" role="status"></p>
            <p id="CartDrawer-LineItemStatus" class="visually-hidden" aria-hidden="true" role="status">{{ 'accessibility.loading' | t }}</p>
          </div>
          <div id="CartDrawer-CartErrors" role="alert"></div>
        </form>
      </cart-drawer-items>
                          
      <div class="drawer__footer">        
        {% if tag_found %}
          <div class="offer-message-cart">
            {% if count < 2 %}
              <a href="{{ settings.collection_offer_url }}">
                <div>
                  <span class="before-text" style="color:{{ settings.before_offer_color }}">{{ settings.before_offer }}</span>
                  <span class="link-text" style="color:{{ settings.before_offer_url_color }}"> {{ settings.collection_offer_url_text }}</span>
                </div>
              </a>
            {% else %}
              <div class="after-text" style="color:{{ settings.after_offer_color }}">{{ settings.after_offer }}</div>
            {% endif %}
          </div>
        {% endif %}
   
        {%- if settings.show_cart_note -%}
          <details id="Details-CartDrawer">
            <summary>
              <span class="summary__title">
                {{ 'sections.cart.note' | t }}
                {% render 'icon-caret' %}
              </span>
            </summary>
            <cart-note class="cart__note field">
              <label class="visually-hidden" for="CartDrawer-Note">{{ 'sections.cart.note' | t }}</label>
              <textarea id="CartDrawer-Note" class="text-area text-area--resize-vertical field__input" name="note" placeholder="{{ 'sections.cart.note' | t }}">{{ cart.note }}</textarea>
            </cart-note>
          </details>
        {%- endif -%}

        <!-- Start blocks-->
        <!-- Subtotals-->

        <div class="cart-drawer__footer" {{ block.shopify_attributes }}>
          <div class="totals" role="status">
            <h2 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h2>
            <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
          </div>

          <div>
            {%- if cart.cart_level_discount_applications.size > 0 -%}
              <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                {%- for discount in cart.cart_level_discount_applications -%}
                  <li class="discounts__discount discounts__discount--end">
                    {%- render 'icon-discount' -%}
                    {{ discount.title }}
                    (-{{ discount.total_allocated_amount | money }})
                  </li>
                {%- endfor -%}
              </ul>
            {%- endif -%}
          </div>

          
        </div>

        <!-- CTAs -->

        <div class="cart__ctas" {{ block.shopify_attributes }}>
          <noscript>
         
            <button type="submit" class="cart__update-button button button--secondary" form="CartDrawer-Form">
              {{ 'sections.cart.update' | t }}
            </button>
           
          </noscript>
           {% comment %}
          <a href="/cart" class="button button--secondary button--full-width">VIEW CART </a>
           {% endcomment %}
              
            <button type="submit" id="CartDrawer-Checkout" class="cart__checkout-button button" name="checkout" form="CartDrawer-Form"{% if cart == empty %} disabled{% endif %}>
            {{ 'sections.cart.checkout' | t }}
          </button>

        </div>
      </div>
    {% else %}
      <div class="match_not_found">{{ settings.match_not_found }}</div>
    {% endif %}                         
    </div>
  </div>
</cart-drawer>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return (msie > 0 || trident > 0);
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function(event) {
      document.querySelector('#cart').submit();
    });

  });
  

 class MmTimer extends HTMLElement {
  constructor() {
    super();
    const _this = this;
    const endTime = localStorage.getItem("endTime");

    if (endTime) {
      // If end time exists in local storage, calculate the remaining time
      const now = new Date().getTime();
      const timeRemaining = Math.max(endTime - now, 0);
      _this.startTimer(timeRemaining);
    } else {
      // If end time doesn't exist in local storage, set the end time as 5 minutes from now
      const endTime = new Date().getTime() + 5 * 60 * 1000;
      localStorage.setItem("endTime", endTime);
      _this.startTimer(5 * 60 * 1000); // Start the timer with the initial 5 minutes
    }
  }

  startTimer(time) {
    const _this = this;
    const endTime = new Date().getTime() + time;
    localStorage.setItem("endTime", endTime);
      let timerInterval = setInterval(function() {
      let now = new Date().getTime();
      let timeRemaining = Math.max(endTime - now, 0);
      let days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
      let hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      let minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
      minutes = minutes < 10 ? "0" + minutes : minutes;
      let seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);
      seconds = seconds < 10 ? "0" + seconds : seconds;
      _this.updateTimer(days, hours, minutes, seconds);
       if (!timeRemaining || timeRemaining < 0) {
          clearInterval(timerInterval);
          localStorage.removeItem("endTime");
          document.querySelector(".fcfs-timer-cart").textContent = " ";
          document.querySelector(".fcfs-timer-cart").classList.remove("fcfs_timer-background")
          fetch("/cart.js")
         .then((response) => response.json())
         .then((cart) => {
         for(let i=0; i < cart.items.length; i++) {
         let fcfsProduct = cart.items[i].properties.fcfs;
          if (fcfsProduct == "true" ){
               document.querySelectorAll("cart-remove-button").forEach((elem) => {
            if (elem.querySelector("[data-fcfs]")) elem.click();
          });
          } 
         }     
      });
        }
    }, 1000);
  }

  updateTimer(days, hours, minutes, seconds) {
    this.querySelector(".fcfs-timer-cart").classList.add("fcfs_timer-background")
    this.querySelector(".mins").innerHTML = minutes + "m ";
    this.querySelector(".secs").innerHTML = seconds + "s ";
    
  }
}

customElements.define("mm-timer", MmTimer);

</script>

